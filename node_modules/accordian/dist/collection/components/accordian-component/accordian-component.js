import { Component, State, Event, Prop, h } from '@stencil/core';
export class AccordianComponent {
  constructor() {
    this.toggle = false;
  }
  toggleComponent() {
    this.toggle = !this.toggle;
    this.onToggle.emit({ visible: this.toggle });
  }
  render() {
    return (h("div", null,
      h("button", { class: "accordion", style: {
          width: this.width,
          backgroundColor: this.color,
        }, onClick: () => this.toggleComponent() },
        this.label,
        this.toggle ? h("span", null, "\u25B2") : h("span", null, "\u25BC")),
      h("div", { class: `content-box ${this.toggle ? 'open' : 'close'}`, style: { width: this.width } },
        h("p", null, this.description))));
  }
  static get is() { return "accordian-component"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["accordian-component.css"]
  }; }
  static get styleUrls() { return {
    "$": ["accordian-component.css"]
  }; }
  static get properties() { return {
    "label": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "label",
      "reflect": false
    },
    "description": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "description",
      "reflect": false
    },
    "width": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "width",
      "reflect": false
    },
    "color": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color",
      "reflect": false
    }
  }; }
  static get states() { return {
    "toggle": {}
  }; }
  static get events() { return [{
      "method": "onToggle",
      "name": "onToggle",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      }
    }]; }
}
